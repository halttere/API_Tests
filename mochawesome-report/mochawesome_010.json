{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2023-07-12T17:19:30.779Z",
    "end": "2023-07-12T17:19:33.134Z",
    "duration": 2355,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7f86b597-a5fd-4d24-ab80-5bd43195d9bb",
      "title": "",
      "fullFile": "cypress\\e2e\\exercicio-api.cy.js",
      "file": "cypress\\e2e\\exercicio-api.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e22ee40c-2c50-43d6-a2e4-7ea03ba93e88",
          "title": "Testes da Funcionalidade Usuários",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve validar contrato de usuários",
              "fullTitle": "Testes da Funcionalidade Usuários Deve validar contrato de usuários",
              "timedOut": null,
              "duration": 747,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(\"GET\", \"/usuarios\").its(\"status\").should(\"equal\", 200);",
              "err": {},
              "uuid": "594abbed-db96-407e-8f0c-6ce509a2eb4f",
              "parentUUID": "e22ee40c-2c50-43d6-a2e4-7ea03ba93e88",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve listar usuários cadastrados",
              "fullTitle": "Testes da Funcionalidade Usuários Deve listar usuários cadastrados",
              "timedOut": null,
              "duration": 228,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(\"GET\", \"/usuarios\").its(\"status\").should(\"equal\", 200);",
              "err": {},
              "uuid": "f77f4f9b-3e6b-4a79-af09-71a10eed950c",
              "parentUUID": "e22ee40c-2c50-43d6-a2e4-7ea03ba93e88",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve cadastrar um usuário com sucesso",
              "fullTitle": "Testes da Funcionalidade Usuários Deve cadastrar um usuário com sucesso",
              "timedOut": null,
              "duration": 404,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const novoEmail = _faker.internet.email();\ncy.cadastrarUsuario({\n  nome: \"Matheus Sena Aguiar\",\n  email: novoEmail,\n  password: \"teste\",\n  administrador: \"true\"\n}).then(usuarioId => {\n  Cypress.env(\"usuarioId\", usuarioId);\n});",
              "err": {},
              "uuid": "e3cb12a6-2f26-4c2a-8b60-bf4da67959ef",
              "parentUUID": "e22ee40c-2c50-43d6-a2e4-7ea03ba93e88",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar um usuário com email inválido",
              "fullTitle": "Testes da Funcionalidade Usuários Deve validar um usuário com email inválido",
              "timedOut": null,
              "duration": 196,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const invalidEmail = \"invalidemail\";\ncy.request({\n  method: \"POST\",\n  url: \"/usuarios\",\n  failOnStatusCode: false,\n  body: {\n    name: \"Matheus Neves dos Santos\",\n    email: invalidEmail,\n    password: \"senha123\"\n  }\n}).then(response => {\n  expect(response.status).to.equal(400);\n});",
              "err": {},
              "uuid": "f4f6f231-f872-4230-917c-539f72ad6d41",
              "parentUUID": "e22ee40c-2c50-43d6-a2e4-7ea03ba93e88",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar um usuário previamente cadastrado",
              "fullTitle": "Testes da Funcionalidade Usuários Deve editar um usuário previamente cadastrado",
              "timedOut": null,
              "duration": 279,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const usuarioId = Cypress.env(\"usuarioId\");\nconst novoEmail = _faker.internet.email();\nconst updatedUserData = {\n  nome: \"Matheus Sena Aguiar\",\n  email: novoEmail,\n  password: \"teste\",\n  administrador: \"true\"\n};\ncy.request(\"PUT\", `/usuarios/${usuarioId}`, updatedUserData).its(\"status\").should(\"equal\", 200);",
              "err": {},
              "uuid": "453aa3f2-9698-49f3-9aa0-9b1f3c090b43",
              "parentUUID": "e22ee40c-2c50-43d6-a2e4-7ea03ba93e88",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve deletar um usuário previamente cadastrado",
              "fullTitle": "Testes da Funcionalidade Usuários Deve deletar um usuário previamente cadastrado",
              "timedOut": null,
              "duration": 218,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const usuarioId = Cypress.env(\"usuarioId\");\ncy.request(\"DELETE\", `/usuarios/${usuarioId}`).its(\"status\").should(\"equal\", 200);",
              "err": {},
              "uuid": "7a4e0569-6ab3-4cc0-9bd8-69270ede74a7",
              "parentUUID": "e22ee40c-2c50-43d6-a2e4-7ea03ba93e88",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "594abbed-db96-407e-8f0c-6ce509a2eb4f",
            "f77f4f9b-3e6b-4a79-af09-71a10eed950c",
            "e3cb12a6-2f26-4c2a-8b60-bf4da67959ef",
            "f4f6f231-f872-4230-917c-539f72ad6d41",
            "453aa3f2-9698-49f3-9aa0-9b1f3c090b43",
            "7a4e0569-6ab3-4cc0-9bd8-69270ede74a7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2072,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}